---
title: Контроль
---

Какое-то время бизнес был очарован идеей **нулевой стоимости копирования** цифровых товаров. Типа один раз напрограммировал — можешь хоть тысячу раз продать, только поднажми с маркетингом.

Пользователи, в свою очередь, были очерованы идеей **отсутствия срока службы "цифровых товаров"** — они, мол, не рассохнутся как дерево, не потрескаются как пластмасса на холоде и т.д. Заботу о сохранении дистрибутива переложили на пользователя. Что-то сломалось - восстанови из копии или купи новую такую же железку, поставь всё заново — не наши это заботы, мы же тебе дали лицензионный ключ. И это даже работало.

Но **обе эти идеи оказались иллюзией**, которая сейчас хорошо подчёркивается схемами работы по подписке. Проблема в том, что **у разработчика прикладного ПО** (да и у пользователя тоже) **невелика зона контроля** :

1. Его ПО работает под управлением операционной системы, разработанной третьей стороной.
2. Операционная система в свою очередь работает на аппаратном обеспечении, разработанном четвёртой стороной.
3. Аппаратному обеспечению в свою очередь требуется клей в виде драйверов и прошивок, который нужно писать, учитывая особенности разных ОС.

Посмотрим на обычный десктопный софт, не SaaS. Вот выходит он на рынок, что будет дальше с его доступностью для пользователей актуальных ОС и железа?

| Через N лет | Без действий | При вялой поддержке и выпуске обновлений | При больших усилиях и выпуске новых версий |
|----:|:----|:----|:----|
| 0 | 90% | 90% | 95% |
| 1 | 85% | 89% | 95% |
| 2 | 80% | 84% | 95% |
| 5 | 60% | 79% | 95% |
| 10 | 40% | 70% | 95% |

- через 1 год — всё продолжает работать на ~85% компьютеров в сегменте целевой аудитории.
- через 2 года — всё продолжает работать на ~80% компьютеров в сегменте целевой аудитории. Если выпустить обновление, этот показатель будет работать на 84%.
- через 5 лет — без усилий со стороны пользователя уже вряд ли что-то запустится.
- через 10 лет — придётся извернуться, чтобы хоть как-то запустить (виртуализация в том или ином виде)

Почему? Всё ломается. В железе и софте находят ошибки, а разработчик прикладного софта имеет очень узкую зону контроля над платформой, в которой запускается.

Выйти из этого круга ему довольно сложно:  

1. Разработка своего железа это долго, дорого, а его маркетинг - ещё дольше и дороже. Для примера можно взять ~~простой советский~~ Эльбрус.
2. Попытка делать SaaS:
	1. Даёт частичный контроль над платформой бэкенда - в пределах имеющегося железа и окружения операционной системы. При использовании PaaS/IaaS можем отбросить часть этого контроля.
	2. Но так как канал поставки к пользователю в SaaS в 99.9% — это веб, то контроля над фронтендом у компании нет.
	3. Окей, бог с ним с вебом, будем делать приложения!... И перенесём контроль с производителей браузеров не на себя, а на владельцев маркетплейсов, в котором эти приложения будут находиться.

Закончу мысль: **контроль — дорого, в текущих реалиях заполучить жизнеспособную финансовую модель с широкой сферой контроля почти невозможно, поэтому все мы будем страдать.** Такой вот киберпанк.

## Темы для размышления

- возможно ли определить объективную стоимость контроля или это сугубо субъективное понятие?
- подписки как "гарантия" работы, (без фиксации гарантий и санкций в случае неисполнения обязательств в пользовательском соглашении)
- а зачем вообще этот контроль упёрся?
- а не является ли он накладными расходами?
- можно и без него жить, а-ля Internet of shit
- энтерпрайз, легаси, поддержка IE6
- доверие пользователя или почему нельзя просто так дать ему условный "APK мимо гугла"
- цепочка контроля или что происходит со сферой контроля у пользователя ПО во всём этом круговороте поставщиков облачных услуг и пухнущей цифровизации.
- тренд на "экосистемы" - попытка получить как можно больше контроля над своим бизнесом?
- возможен ли абсолютный (полный) контроль?
